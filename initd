#! /bin/sh
### BEGIN INIT INFO
# Provides:          yaprom
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Yaprom daemons
# Description:       Manage Yaprom daemons
### END INIT INFO

# Author: Nicolas Vinot <aeris+yaprom@imirhil.fr>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Manage Yaprom daemons"
NAME=yaprom
RBENV_ROOT=/usr/local/rbenv
SCRIPTNAME=/etc/init.d/$NAME
YAPROM_DIR=/srv/www/imirhil.fr/forge
GIT_PIDFILE=/var/run/yaprom-git.pid
BUNDLE=$RBENV_ROOT/shims/bundle
SIDEKIQ=$YAPROM_DIR/vendor/bundle/ruby/2.1.0/bin/sidekiq
export RAILS_ENV=production

. /lib/init/vars.sh
. /lib/lsb/init-functions
VERBOSE=true

do_start_sidekiq() {
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $NAME" "$3"
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon --start --quiet --pidfile $1 --make-pidfile \
		--chdir $YAPROM_DIR --chuid $2 \
		--exec $SIDEKIQ --test > /dev/null
	RETVAL="$?"
	if [ "$RETVAL" = "0" ]; then
		start-stop-daemon --start --quiet --pidfile $1 --make-pidfile \
			--chdir $YAPROM_DIR --chuid $2 --background \
			--exec $BUNDLE -- exec sidekiq -q $3
		RETVAL="$?"
	fi
	case "$RETVAL" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
}

do_start_git() {
	do_start_sidekiq $GIT_PIDFILE git:git git
}

do_stop_sidekiq() {
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $NAME" "$2"
	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --pidfile $1
	RETVAL="$?"
	# Many daemons don't delete their pidfiles when they exit.
	[ "$RETVAL" = "0" ] && rm -f $1
	case "$RETVAL" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
}

do_stop_git() {
	do_stop_sidekiq $GIT_PIDFILE git
}

do_status_sidekiq() {
	[ "$VERBOSE" != no ] && log_daemon_msg "Status $NAME" "$2"
	start-stop-daemon --status --quiet --oknodo --pidfile $1
	RETVAL="$?"
	case "$RETVAL" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
}

do_status_git() {
	do_status_sidekiq $GIT_PIDFILE git
}

case "$1" in
  start)
	do_start_git
	;;
  stop)
	do_stop_git
	;;
  restart)
	do_stop_git
	do_start_git
	;;
  status)
	do_status_git
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
	exit 3
	;;
esac
